window.SIDEBAR_ITEMS = {"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"struct":[["AllowanceDetails","Struct to define when a transfer should be allowed from the sender, receiver, and currency combination. Transfer allowed time set by range of block numbers Defaults to `allowed_at` starting at 0, and `blocked_at` ending at MAX block value as per `Default` impl. Current block must be between allowed at and blocked at for transfer to be approved if allowance for sender/currency/receiver present."],["AllowanceMetadata","Metadata values used to track and manage Allowances for a sending Account/Currency combination. contains the number of allowances/presence of existing allowances for said combination, as well as whether a delay is set for the allowance to take effect, and if–and then when–a delay is modifiable."],["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["AccountCurrencyTransferAllowance","Storage item for allowances specified for a sending account, currency type and receiving location"],["AccountCurrencyTransferCountDelay","Storage item containing number of allowances set, delay for sending account/currency, and block number delay is modifiable at. Contains an instance of AllowanceMetadata with allowance count as `u64`, current_delay as `Option<T::BlockNumber>`, and modifiable_at as `Option<T::BlockNumber>`. If a delay is set, but no allowances have been created, `allowance_count` will be set to `0`. A double map is used here as we need to know whether there is a restriction set for the account and currency in the case where there is no allowance for destination location. Using an StorageNMap would not allow us to look up whether there was a restriction for the sending account and currency, given that:"],["AllowanceDetailsOf","AllowanceDetails where `BlockNumber` is of type T::BlockNumber"],["DepositBalanceOf","Balance type for the reserve/deposit made when creating an Allowance"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."]]};