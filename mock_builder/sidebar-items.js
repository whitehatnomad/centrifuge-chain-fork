window.SIDEBAR_ITEMS = {"constant":[["MOCK_FN_PREFIX","Prefix that the register functions should have."]],"fn":[["execute","Execute a function from the function storage. This function should be called with a locator used as a function identification."],["register","Register a mock function into the mock function storage. This function should be called with a locator used as a function identification."]],"macro":[["execute_call","Execute a function from the function storage. Same as `execute()` but it uses as locator who calls this macro."],["execute_call_instance","Execute a function from the function storage for a pallet with instances. Same as `execute()` but it uses as locator who calls this macro."],["register_call","Register a mock function into the mock function storage. Same as `register()` but it uses as locator who calls this macro."],["register_call_instance","Register a mock function into the mock function storage for a pallet with instances. Same as `register()` but it uses as locator who calls this macro."]],"mod":[["location","Provide functions for handle fuction locations"],["storage","Provide functions for register/execute calls This module is in change of storing closures with the type `Fn(I) -> O` in a static lifetime storage, supporting mixing differents `I` and `O` types. Because we need to merge different closures with different types in the same storage, we use an `u128` as closure identification (composed by the closure function pointer (`u64`) and the pointer to the closure metadata (`u64`)."]]};